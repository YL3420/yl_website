[
    {
        "title": "Minimum Spanning Tree in Java",
        "tags": "Operations Research, Data Structure, Greedy",
        "description": "Find the most cost-efficient way to branch out to all vertices starting from a root by constructing a minimum spanning tree. Implemented data structures like MinHeap to allow the algorithm to sort the edges with a priority ranking. The project utilizes Graalvm's Javascript engine to run the graphing library, Graphviz, to visualize the minimum spanning tree.",
        "banner_src": "orie_img",
        "demo_link": "https://github.com/YL3420/minimum-spanning-tree-java",
        "repo_link": "https://github.com/YL3420/minimum-spanning-tree-java"
    },
    {
        "title": "Scheduling Project",
        "tags": "Operations Research, Greedy, Simulated Annealing",
        "description": "Solving the exam timetabling problem for university registrar using a variation of Greedy Randomized Adaptive Search Procedure. The method combines elements of randomness and prioritzation of exams with high scheduling difficulty. This construction phase is followed by an iterative local search phase with hill climbing step, simulated annealing, etc.",
        "banner_src": "pacman_proj",
        "demo_link": "",
        "repo_link": "https://github.com/YL3420/final_scheduling_project"
    },
    {
        "title": "Pacman with Java",
        "tags": "Data Structures, Shortest Path, Java",
        "description": "Building Pacman using Java GUI library and data structures. Learned about implementing a variation of Breadth First Search, Dijkstra's Algorithm, to implement the ghosts' behavior in the Pacman game.",
        "banner_src": "tsp_img",
        "demo_link": "",
        "repo_link": ""
    }
]